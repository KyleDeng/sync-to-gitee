name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GitHub code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史记录

      - name: Configure Git
        run: |
          git config --global user.name "GithubAction"  # 保留，不需要修改
          git config --global user.email "action@github.com"  # 保留，不需要修改

      - name: Add Gitee Remote
        run: |
          git remote add gitee https://${{ secrets.GITEE_USER }}:${{ secrets.GITEE_TOKEN }}@gitee.com/${{ secrets.GITEE_REPO }}.git

      - name: Push to Gitee
        run: git push gitee --tags --force

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Make build script executable
        run: chmod +x ./build_package.sh

      - name: Build package
        run: ./build_package.sh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifacts
          path: readme.tar.gz

  release:
    runs-on: ubuntu-latest
    needs: [build-linux]
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/linux-artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  sync-to-gitee:
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Get release version
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Install jq
        run: sudo apt-get install jq

      - name: Get GitHub Release information
        id: get_github_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 获取 GitHub Release 信息
          release_info=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.ref_name }}")
          
          # 检查是否找到 Release
          if echo "$release_info" | jq -e '.message == "Not Found"' > /dev/null; then
            echo "GitHub Release not found for tag ${{ github.ref_name }}"
            exit 1
          fi
          
          # 提取 release_id 和 body
          release_id=$(echo "$release_info" | jq -r '.id')
          release_body=$(echo "$release_info" | jq -r '.body')
          
          echo "release_id=$release_id" >> $GITHUB_ENV
          echo "release_body=$release_body" >> $GITHUB_ENV

      - name: Create Gitee Release
        id: create_gitee_release
        env:
          GITEE_API_URL: https://gitee.com/api/v5/repos/${{ secrets.GITEE_REPO }}/releases
          GITEE_TOKEN: ${{ secrets.GITEE_TOKEN }}
        run: |
          # 创建 Gitee Release，使用与 GitHub 相同的描述
          response=$(curl -s -X POST "$GITEE_API_URL" \
            -H "Content-Type: application/json" \
            -H "Authorization: token $GITEE_TOKEN" \
            -d '{
              "tag_name": "'"${{ github.ref_name }}"'"',
              "target_commitish": "master",
              "name": "'"${{ github.ref_name }} Release"'",
              "body": "'"${{ env.release_body }}"'",
              "draft": false,
              "prerelease": false
            }')
          
          # 提取 release_id
          release_id=$(echo "$response" | jq -r '.id')
          echo "release_id=$release_id" >> $GITHUB_ENV
          echo "Release created on Gitee: $release_id"

      - name: Upload assets to Gitee Release
        env:
          GITEE_UPLOAD_URL: https://gitee.com/api/v5/repos/${{ secrets.GITEE_REPO }}/releases/${{ env.release_id }}/assets
          GITEE_TOKEN: ${{ secrets.GITEE_TOKEN }}
        run: |
          # 遍历所有需要上传的文件
          for file in $(find artifacts -type f); do
            filename=$(basename "$file")
            echo "Uploading $filename to Gitee Release..."
            
            # 上传文件到 Gitee Release
            curl -s -X POST "$GITEE_UPLOAD_URL" \
              -H "Authorization: token $GITEE_TOKEN" \
              -F "name=$filename" \
              -F "file=@$file"
              
            echo "Uploaded $filename"
          done
